УТВЕРЖДАЮ
Проректор по образовательной
деятельности
РАБОЧАЯ ПРОГРАММА ДИСЦИПЛИНЫ
Дисциплина:
Форма обучения:
Уровень высшего образования:
Общая трудоёмкость:
Направление подготовки:
Направленность:
Языки и методы программирования 1
(наименование)
очная
(очная/очно-заочная/заочная)
бакалавриат
(бакалавриат/специалитет/магистратура)
144 (4)
(часы (ЗЕ))
01.03.02 Прикладная математика и информатика
(код и наименование направления)
Математическое и информационное обеспечение
экономической деятельности (СУОС)
(наименование образовательной программы)
_________ И.Ю.Черникова
23« » сентября 2024 г.
Пермь 2024
Пермский национальный исследовательский
политехнический университет
Министерство науки и высшего образования Российской Федерации
Федеральное государственное автономное образовательное учреждение
высшего образования2
Формирование комплекса знаний в области технологии программирования, умений и навыков по
использованию современных методов и приемов программирования на языках высокого уровня,
техники реализации и построения алгоритмов, умений эффективного использования
информационных средств и ресурсов, ознакомление с основными языками и методами
программирования вычислительных систем.
Задачи:
• формирование знаний
-основные понятия языков программирования, принципы анализа синтаксиса и семантики;
- формальные способы описания языков программирования; типы данных, способы и механизмы
управления данными, методами и основные этапы трансляции;
- базовые концепции технологий программирования.
• формирование умений
- создавать программный код;
- использовать языки и методы программирования для решения профессиональных задач;
• формирование навыков
- комплексной отладки программного продукта;
- владения языками процедурного и объектно-ориентированного программирования
1.1. Цели и задачи дисциплины
1. Общие положения
1.2. Изучаемые объекты дисциплины
- языки программирования, алгоритмы, библиотеки и пакеты программ;
- продукты системного и прикладного программного обеспечения;
- математическое и программное обеспечение компьютерных сетей;
- высокопроизводительные вычисления и технологии параллельного программирования.
1.3. Входные требования
Не предусмотрены
2. Планируемые результаты обучения по дисциплине
Планируемые результаты
обучения по дисциплине
(знать, уметь, владеть)
Индикатор достижения
компетенции, с которым
соотнесены планируемые
результаты обучения
Средства
оценкиКомпетенция Индекс
индикатора
Уметь создавать
программный код
Умеет обосновывать выбор
и применение современного
математического аппарата и
систем программирования в
исследовательской и
прикладной деятельности
Контрольная
работа
ОПК-2 ИД-1ОПК-23
Планируемые результаты
обучения по дисциплине
(знать, уметь, владеть)
Индикатор достижения
компетенции, с которым
соотнесены планируемые
результаты обучения
Средства
оценкиКомпетенция Индекс
индикатора
Владеть языками
процедурного и объектно-
ориентированного
программирования
Владеет навыками
применения современного
математического аппарата и
систем программирования
при разработке и
реализации алгоритмов
решения прикладных задач
Индивидуальн
ое задание
ОПК-2 ИД-2ОПК-2
Знать основные понятия
языков программирования,
принципы анализа
синтаксиса и семантики;
формальные способы
описания языков
программирования; типы
данных, способы и
механизмы управления
данными, методами и
основные этапы
трансляции.
Знает современный
математический аппарат,
особенности применения
современных
математических методов и
систем программирования в
областях знаний, связанных
с профессиональной
деятельностью;
Контрольная
работа
ОПК-2 ИД-3ОПК-2
Знать базовые концепции
технологий
программирования.
Знает порядок постановки и
распределения задач
исполнителям работ и
способы комбинирования
существующих
информационно-
коммуникационных
технологии для решения
задач в области
профессиональной
деятельности
Контрольная
работа
ОПК-4 ИД-1ОПК-4
Уметь использовать языки
и системы
программирования для
решения
профессиональных задач.
Умеет определять
необходимость
комбинировать и
адаптировать
существующие
информационно-
коммуникационные
технологии при решении
задач в области
профессиональной
деятельности и учитывать
требования
информационной
безопасности
Индивидуальн
ое задание
ОПК-4 ИД-2ОПК-4
Владеть комплексной
отладкой программного
продукта.
Владеет навыками
использования
существующих
информационно-
коммуникационных
технологии для решения
Индивидуальн
ое задание
ОПК-4 ИД-3ОПК-44
Планируемые результаты
обучения по дисциплине
(знать, уметь, владеть)
Индикатор достижения
компетенции, с которым
соотнесены планируемые
результаты обучения
Средства
оценкиКомпетенция Индекс
индикатора
задач в области
профессиональной
деятельности
3. Объем и виды учебной работы
Вид учебной работы Всего
часов
Распределение
по семестрам в часах
Номер семестра
1
1. Проведение учебных занятий (включая проведе-
ние текущего контроля успеваемости) в форме:
1.1. Контактная аудиторная работа, из них:
72 72
    - лекции (Л) 16 16
    - лабораторные работы (ЛР)
    - практические занятия, семинары и (или) другие
виды занятий семинарского типа (ПЗ)
34 34
    - контроль самостоятельной работы (КСР) 22 22
    - контрольная работа
1.2. Самостоятельная работа студентов (СРС) 36 36
2. Промежуточная аттестация
    Экзамен 36 36
    Дифференцированный зачет
    Зачет
    Курсовой проект (КП)
    Курсовая работа (КР)
Общая трудоемкость дисциплины 144 144
4. Содержание дисциплины
Наименование разделов дисциплины с кратким
содержанием
Объем аудиторных
занятий по видам в часах
Л ЛР ПЗ
Объем
внеаудиторных
занятий по видам
в часах
СРС
1-й семестр5
Наименование разделов дисциплины с кратким
содержанием
Объем аудиторных
занятий по видам в часах
Л ЛР ПЗ
Объем
внеаудиторных
занятий по видам
в часах
СРС
Возникновение и этапы становления языков
программирования
Тема 1. Основные понятия языков
программирования. История развития языков
программирования. Основные понятия. Формальные
способы описания языков программирования.
Понятие языка программирования. Понятия данных
и операций, понятие виртуальной машины языка.
Традиционные языки программирования.
Формальные способы описания языков
программирования.
Тема 2. Синтаксис, семантика, формальные способы
описания языков программирования. Базисные
свойства языков программирования. Управляющие
структуры. Процедурные абстракции. Основные
управляющие структуры, циклы.
Структурное программирование. Функции и
процедуры. Передача управления и передача данных.
Реализация в С++, С#, VB, F#, Pascal, Modula-2, Ada.
3 0 9 6
Управления данными
Тема 3. Типы данных. Способы и механизмы
управления данными. Основные понятия и
проблемы, связанные с типами данных.
Классификация типов данных. Основные свойства
любых типов данных. Концепция уникальности
типов. Совместимость и преобразование типов.
Полиморфизм операций. Динамическая
идентификация типа.
Тема 4. Базисные типы данных. Простые типы
данных: целые, вещественные,
символьные, перечисления, диапазоны. Указатели и
ссылки. Проблема сборки мусора и висячих ссылок.
Составные типы данных: массивы, записи, файлы,
множества, строки. Определение новых типов
данных. Примеры на языке С, Modula-2.
2 0 2 4
Классы, объекты
Тема 5. Модульная структура языков
программирования. Концепция классов.
Модули в различных языках программирования
(Pascal, C, Oberon). Виды модулей (Modula-2).
Логические модули и пакеты в языке Ada. Классы в
языках С++, Java.
Тема 6. Реализация концепции классов в языке
С++.Методы и основные этапы трансляции. Понятие
класса и объекта. Члены-данные и члены-функции.
Конструкторы и деструкторы. Статические члены
класса. Вложенные и
3 0 6 66
Наименование разделов дисциплины с кратким
содержанием
Объем аудиторных
занятий по видам в часах
Л ЛР ПЗ
Объем
внеаудиторных
занятий по видам
в часах
СРС
локальные классы. Трансляция и компиляция. Этапы
трансляции.
Тема 7. Реализация концепции классов в Java и
Object Pascal. Обзор механизма классов Java и Delphi.
Инкапсуляция, наследование, полиморфизм,
абстракция, методы
Тема 8. Инкапсуляция. Абстрактные типы данных.
Подходы к инкапсуляции в классово
ориентированных языках: С++, Modula-2, Delphi,
Oberon. Абстрактные типы данных как
максимальный случай инкапсуляции типов данных.
Тема 9. Механизм наследования в языках
программирования. Реализация наследования в С++,
Delphi, Java. Области видимости членов класса.
Дружественные
функции и дружественные классы. Множественное
наследование. Виртуальные классы. Формы
полиморфизма.
Тема 10. Динамическое связывание методов.
Реализация в Oberon, C++, Delphi, Java. Виртуальные
функции. Таблица виртуальных методов.
Абстрактные виртуальные методы и абстрактные
классы.
3 0 8 8
Трансляция в языках программирования
Тема 11. Методы и основные этапы трансляции
программы. Виды трансляции. Методы трансляции
программы. Основные этапы. Обзор видов
трансляции. Раздельная независимая и раздельная
зависимая трансляция. Реализация в C++, Modula-2,
Oberon, Ada.
Тема 12. Статическая параметризация в языках C++,
Ada.
2 0 3 4
Шаблоны, исключения и конструкции видов
программирования
Тема 13. Шаблоны в языке С++. Шаблоны классов и
функций в С++. Примеры
применения. Ошибки в конструировании шаблонов.
Стандартная библиотека шаблонов STL.
Тема 14. Исключительные ситуации в языках
программирования. Понятие исключительной
ситуации. Виды исключений. Модели обработки
исключений,
обработчики. Реализация в языках C++, Java, Delphi.
Тема 15. Конструкции распределенного и
параллельного программирования.
Основные подходы к реализации распределенного и
параллельного программирования. Основные
3 0 6 87
Наименование разделов дисциплины с кратким
содержанием
Объем аудиторных
занятий по видам в часах
Л ЛР ПЗ
Объем
внеаудиторных
занятий по видам
в часах
СРС
конструкции.
ИТОГО по 1-му семестру 16 0 34 36
ИТОГО по дисциплине 16 0 34 36
Тематика примерных практических занятий
№
п.п. Наименование темы практического (семинарского) занятия
1 Формальные способы описания языков программирования.
2 Синтаксис, семантика.
3 Способы и механизмы управления данными.
4 Базисные типы данных.
5 Модульная структура языков программирования. Классы.
6 Реализация концепции классов в языке С++. Методы и основные этапы трансляции.
7 Реализация концепции классов в Java и Object Pascal.
8 Инкапсуляция. Абстрактные типы данных.
9 Механизм наследования в языках программирования.
10 Динамическое связывание методов.
11 Методы и основные этапы трансляции программы.
12 Статическая параметризация в языках C++, Ada.
13 Шаблоны в языке С++.
14 Исключительные ситуации в языках программирования.
15 Конструкции распределенного и параллельного программирования.8
5. Организационно-педагогические условия
     5.1. Образовательные технологии, используемые для формирования
компетенций
        Проведение лекционных занятий по дисциплине основывается на активном методе обучения,
при котором учащиеся не пассивные слушатели, а активные участники занятия, отвечающие на
вопросы преподавателя. Вопросы преподавателя нацелены на активизацию процессов усвоения
материала, а также на развитие логического мышления. Преподаватель заранее намечает список
вопросов, стимулирующих ассоциативное мышление и установление связей с ранее освоенным
материалом.
        Практические занятия проводятся на основе реализации метода обучения действием:
определяются проблемные области, формируются группы. При проведении практических занятий
преследуются следующие цели: применение знаний отдельных дисциплин и креативных методов
для решения проблем и приятия решений; отработка у обучающихся навыков командной работы,
межличностных коммуникаций и развитие лидерских качеств; закрепление основ теоретических
знаний.
        При проведении учебных занятий используются интерактивные лекции, групповые дискуссии,
анализ ситуаций и имитационных моделей.
5.2. Методические указания для обучающихся по изучению дисциплины
        При изучении дисциплины обучающимся целесообразно выполнять следующие
рекомендации:
        1. Изучение учебной дисциплины должно вестись систематически.
        2. После изучения какого-либо раздела по учебнику или конспектным материалам
рекомендуется по памяти воспроизвести основные термины, определения, понятия раздела.
        3. Особое внимание следует уделить выполнению отчетов по практическим занятиям,
индивидуальным комплексным заданиям на самостоятельную работу.
        4. Вся тематика вопросов, изучаемых самостоятельно, задается на лекциях преподавателем.
Им же даются источники (в первую очередь вновь изданные в периодической научной литературе)
для более детального понимания вопросов, озвученных на лекции.
6.1. Печатная учебно-методическая литература
     6. Перечень учебно-методического и информационного обеспечения
для самостоятельной работы обучающихся по дисциплине
№ п/п
Библиографическое описание
(автор, заглавие, вид издания, место, издательство,
год издания, количество страниц)
Количество
экземпляров в
библиотеке
1. Основная литература
1 Баженова И. Ю. Языки программирования : учебник для вузов.
Москва : Академия, 2012. 358 с. 23,0 усл. печ. л.
19
2. Дополнительная литература
2.1. Учебные и научные издания
1 Гергель В. П. Современные языки и технологии параллельного
программирования: учебник для вузов. Москва : Изд-во МГУ им. М.
В. Ломоносова, 2012. 406 с. 32,9 усл. печ. л.
35
2 Головин И. Г., Волкова И. А. Языки и методы программирования:
учебник для вузов. 2-е изд., стер. Москва : Академия, 2016. 304 с.
19,0 усл. печ. л.
29
3 Ноткин А. М. Технологии программирования. Программирование
графических интерфейсов: Microsoft Visual и Borland Delphi : учебное
пособие. Пермь : Изд-во ПНИПУ, 2013. 204 с. 13,0 усл. печ. л.
15
4 Подбельский В. В. Язык Си++: учебное пособие для вузов. 5-е изд.
М. : Финансы и статистика, 2008. 559 с
10
2.2. Периодические издания
Не используется
2.3. Нормативно-технические издания
Не используется
3. Методические указания для студентов по освоению дисциплины
Не используется
4. Учебно-методическое обеспечение самостоятельной работы студента
Не используется
     6.2. Электронная учебно-методическая литература
Вид литературы Наименование
разработки
Ссылка на
информационный ресурс
Доступность
(сеть Интернет /
локальная сеть;
авторизованный /
свободный доступ)
Основная
литература
Свердлов, С. З. Языки
программирования и методы
трансляции : учебное пособие / С.
З. Свердлов. — 2-е изд., испр. —
Санкт-Петербург : Лань, 2019. —
564 с. — ISBN 978-5-8114-3457-2.
— Текст : электронный // Лань :
электронно-библиотечная
система.
https://elib.pstu.ru/Record/R
ULANRU-LAN-BOOK-
362948
сеть Интернет;
авторизованный
доступ
Основная
литература
Технологии программирования.
Программирование графических
интерфейсов: Microsoft Visual и
Borland Delphi : учебное пособие /
А. М. Ноткин ; Пермский
национальный исследовательский
политехнический университет .—
Пермь : Изд-во ПНИПУ, 2013 .—
204 с
https://elib.pstu.ru/Record/R
UPNRPUelib3513
сеть Интернет;
авторизованный
доступ
     6.3. Лицензионное и свободно распространяемое программное обеспечение,
используемое при осуществлении образовательного процесса по дисциплине
Вид ПО Наименование ПО
Операционные системы MS Windows 7 (подп. Azure Dev Tools
for Teaching  до 27.03.2022 )10
Вид ПО Наименование ПО
Офисные приложения. Microsoft Office Professional 2007. лиц.
42661567
Среды разработки, тестирования и отладки Embarcadero Delphi 2007, лиц.№ 33948
, 137 лиц. ПНИПУ 2008 г.
Среды разработки, тестирования и отладки MS Visual studio 2019 community
(Free)
Среды разработки, тестирования и отладки PascalABC.NET, свободная лиц. GNU
LGPL
     6.4. Современные профессиональные базы данных и информационные
справочные системы, используемые при осуществлении образовательного
процесса по дисциплине
Наименование Ссылка на информационный ресурс
Научная библиотека Пермского национального
исследовательского политехнического университета
https://elib.pstu.ru/
Электронно-библиотечеая система Лань https://e.lanbook.com/
Электронно-библиотечная система IPRsmart http://www.iprbookshop.ru/
Информационные ресурсы Сети КонсультантПлюс локальная сеть
     7. Материально-техническое обеспечение образовательного процесса по
дисциплине
Вид занятий Наименование необходимого основного оборудования
и технических средств обучения Количество единиц
Лекция Ноутбук, проектор 1
Практическое
занятие
ПК 20
8. Фонд оценочных средств дисциплины
Описан в отдельном документеМинистерство науки и высшего образования Российской Федерации 
Федеральное государственное автономное образовательное учреждение  
высшего образования 
«Пермский национальный исследовательский  политехнический  
университет» 
 
 
 
 
 
 
 
 
ФОНД ОЦЕНОЧНЫХ СРЕДСТВ 
для проведения промежуточной аттестации обучающихся по дисциплине 
«Языки и методы программирования 1» 
 
Приложение к рабочей программе дисциплины  
 
 
 
Направление подготовки:                   01.03.02 Прикладная математика и 
информатика 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Пермь 2024   
 2 
Фонд оценочных средств для проведения промежуточной аттестации 
обучающихся по дисциплине является частью (приложением) к рабочей программе 
дисциплины. Фонд оценочных средств для проведения промежуточной аттестации 
обучающихся по дисциплине разработан в соответствии с общей частью фонда 
оценочных средств для проведения промежуточной аттестации основной 
образовательной программы, которая устанавливает систему оценивания 
результатов промежуточной аттестации и критерии выставления оценок . Фонд 
оценочных средств  для проведения промежуточной аттестации обучающихся по 
дисциплине устанавливает формы и процедуры текущего контроля успеваемости и 
промежуточной аттестации обучающихся по дисциплине. 
Предусмотрены аудиторные лекционные  и практические занятия, а также 
самостоятельная работа студентов. В рамках освоения учебного материала 
дисциплины формируется компоненты компетенций знать, уметь, владеть, 
указанные в РПД, которые выступают в качестве контролируемых результатов 
обучения по дисциплине. 
Контроль уровня усвоенных знаний, освоенных умений и приобретенных 
владений осуществляется в рамках текущего, рубежного и промежуточного 
контроля при изучении теоретического материала и в ходе практических занятий, а 
также на экзамене. Итоговой оценкой достижения результатов обучения по 
дисциплине является промежуточн ая аттестация в виде экзамена, проводимая с 
учетом результатов текущего и рубежного контроля. 
 
1. Виды контроля, типовые контрольные задания и шкалы оценивания 
результатов обучения 
Текущий контроль успеваемости имеет целью обеспечение максимальной 
эффективности учебного процесса, управление процессом формирования 
заданных компетенций обучаемых, повышение мотивации к учебе и 
предусматривает оценивание хода освоения  дисциплины. В соответствии с 
Положением о проведении текущего контроля успеваемости и промежуточной 
аттестации обучающихся по образовательным программам высшего образования 
– программам бакалавриата, специалитета и магистратуры  в ПНИПУ 
предусмотрены следующие виды и периодичность текущего контроля 
успеваемости обучающихся:  
- входной контроль, проверка исходного уровня подготовленности 
обучаемого и его соответствия предъявляемым требованиям для изучения данной 
дисциплины; 
- текущий контроль усвоения материала (уровня освоения компонента 
«знать» заданных компетенций) на каждом групповом занятии и контроль 
посещаемости лекционных занятий; 
- промежуточный и рубежный контроль освоения обучаемыми отдельных 
компонентов «знать», «уметь» заданных компетенций путем компьютерного или 
бланочного тестирования, контрольных опросов, контрольных работ 
(индивидуальных домашних заданий), защиты отчетов по лабораторным работам, 
рефератов, эссе и т.д.  
 3 
Рубежный контроль по дисциплине проводится на следующей неделе после 
прохождения модуля дисциплины, а промежуточный – во время каждого 
контрольного мероприятия внутри модулей дисциплины; 
- межсессионная аттестация, единовременное подведение итогов текущей 
успеваемости не менее одного раза  в семестр по всем дисциплинам для каждого 
направления подготовки (специальности), курса, группы;  
- контроль остаточных знаний. 
2.1. Текущий контроль усвоения материала 
Текущий контроль усвоения материала  в форме собеседования или 
выборочного теоретического опроса студентов проводится по каждой теме. 
Результаты по 4-балльной шкале оценивания заносятся в книжку преподавателя и 
учитываются в виде  интегральной оценки при проведении промежуточной 
аттестации. 
2.2. Рубежный контроль 
Рубежный контроль для комплексного оценивания усвоенных знаний, 
освоенных умений и приобретенных владений проводится в форме защиты 
практических занятий и рубежных контрольных работ (после изучения каждого 
модуля учебной дисциплины). 
2.2.1. Защита практических занятий 
Всего запланировано 8 практических занятий . Типовые темы практических 
занятий приведены в РПД. 
Защита практического занятия проводится индивидуально каждым студентом 
или группой студентов. Типовые шкала и критерии оценки приведены в общей 
части ФОС образовательной программы.  
 
2.2.2. Рубежная контрольная работа 
Согласно РПД запланировано 6 рубежных контрольных работ (КР) после 
освоения студентами учебных модулей дисциплин ы. Первая КР  по модулю 1 
«Возникновение и этапы становления языков программирования », вторая КР – по 
модулю 2 « Управления данными», третья КР – по модулю 3 « Классы, объекты», 
четвертая КР – по модулю 4 « Инкапсуляция, наследование, полиморфизм, 
абстракция, методы », пятая КР – по модулю 5 «Трансляция в языках 
программирования», шестая КР – по модулю 6 «Шаблоны, исключения и 
конструкции видов программирования». 
Типовые шкала и критерии оценки результатов рубежной контрольной 
работы приведены в общей части ФОС образовательной программы.  
 
2.3. Промежуточная аттестация (итоговый контроль) 
Допуск к промежуточной аттестации  осуществляется по результатам 
текущего и рубежного контроля. У словиями допуска являются успешная сдача всех 
лабораторных работ и положительная интегральная оценка по результатам 
текущего и рубежного контроля. 
Промежуточная аттестация, согласно РПД, проводится в виде экзамена по 
дисциплине устно по билетам. Билет содержит теоретически е вопросы (ТВ) для 
проверки усвоенных знаний, практически е задания (ПЗ) для проверки освоенных   
 4 
умений и комплексные задания (КЗ) для контроля уровня приобретенных владений 
всех заявленных компетенций. 
Билет формируется таким образом, чтобы в него попали вопросы и 
практические задания, контролирующие уровень сформированности всех 
заявленных компетенций.  Форма билета представлена в общей части ФОС 
образовательной программы. 
 
2.3.2. Шкалы оценивания результатов обучения на экзамене 
Оценка результатов обучения по дисциплине в форме уровня 
сформированности компонентов знать, уметь, владеть  заявленных компетенций 
проводится по 4 -х балльной шкале оценивания путем выборочного контроля во 
время экзамена.  
Типовые шкала и критерии оценки результатов обучения при сдаче экзамена 
для компонентов знать, уметь  и владеть приведены в общей части ФОС 
образовательной программы.  
3. Критерии  оценивания уровня сформированности компонентов и 
компетенций 
 3.1. Оценка уровня сформированности компонентов компетенций  
При оценке уровня сформированности компетенций в рамках выборочного 
контроля при экзамене считается, что полученная оценка за компонент 
проверяемой в билете компетенции обобщается на соответствующий компонент 
всех компетенций, формируемых в рамках данной учебной дисциплины.  
Типовые критерии и шкалы оценивания уровня сформированности 
компонентов компетенций приведены в общей части ФОС образовательной 
программы. 
3.2. Оценка уровня сформированности компетенций  
Общая оценка уровня сформированности всех компетенций проводится 
путем агрегирования оценок, полученных студентом за каждый компонент 
формируемых компетенций, с учетом результатов текущего и рубежного контроля  
в виде интегральной оценки по 4 -х балльной шкале . Все результаты контроля 
заносятся в оценочный лист и заполняются преподавателем по итогам 
промежуточной аттестации. 
Форма оценочного листа и требования к его заполнению приведены в общей 
части ФОС образовательной программы.   
При формировании итоговой оценки  промежуточной аттестации  в виде 
экзамена используются типовые критерии , приведенные в общей части ФОС 
образовательной программы. 
 
   
 5 
ЗАДАНИЯ ПО ОБРАЗОВАТЕЛЬНОЙ ПРОГРАММЕ 
 
Правильный ответ Содержание вопроса Компетенция 
struct 
object 
class 
namespace 
Какое ключевое слово используется для объявления 
класса в C++? ОПК-2 
== 
 != 
>= 
&& 
Какой из приведённых операторов не относится к 
операторам сравнения в C++? ОПК-2 
malloc 
new 
allocate 
create 
Какая функция в C++ возвращает указатель на 
динамически выделенную память? ОПК-2 
char 
void 
int 
float 
Какой тип данных используется для хранения целых 
чисел в C++? ОПК-2 
int array(5); 
int array[5]; 
int array{5}; 
int array <5>; 
Какая из следующих конструкций в C++ правильно 
объявляет массив из 5 целых чисел? ОПК-2 
char 
void 
int 
float 
Какой тип данных используется для хранения 
символов в C++? ОПК-2 
10 Сколько элементов в массиве int arr[10]? ОПК-2 
4 Сколько байт занимает тип данных int на 
стандартной 32-битной системе? ОПК-2 
1 Каким будет результат выполнения выражения 5 % 
2? ОПК-2 
0 Сколько аргументов принимает конструктор по 
умолчанию? ОПК-4 
0 Какой номер индекса у первого элемента массива в 
C++? ОПК-2 
5 Сколько элементов будет в векторе после 
выполнения операции vector<int> v(5)? ОПК-2 
1 Какой результат выражения sizeof(char)? ОПК-2 
3 Какой результат выполнения выражения 7 / 2 в 
целочисленном делении? ОПК-2 
8 Сколько байт занимает тип данных double на 
стандартной 64-битной системе? ОПК-2 
8 Сколько бит в одном байте? ОПК-2 
5 Какое значение вернёт функция strlen("hello")? ОПК-2 
8 Вычислите результат следующего выражения: 6 + 5 
* 4 % 3. ОПК-2 
объектно-
ориентированное 
программирование 
Что означает аббревиатура ООП? ОПК-4 
float, double Какие типы данных используются для хранения 
дробных чисел? ОПК-2  
 6 
private, protected, public Какие существуют модификаторы доступа в классах 
C++? ОПК-4 
конструктор, 
деструктор 
Как называются функции, которые автоматически 
вызываются при создании и уничтожении объекта 
класса в C++? 
ОПК-4 
new, delete Какие операторы используются для динамического 
выделения и освобождения памяти в C++? ОПК-2 
break, continue, return Назовите операторы: прерывания цикла, перехода к 
следующей итерации цикла, возврата из функции. ОПК-2 
корень, лист Как называется начальный узел дерева и, наоборот, 
узел, из которой не выходит ни одной дуги? ОПК-4 
наследование, 
абстракция, 
инкапсуляция,  
полиморфизм 
Назовите 4 основных принципа ООП. ОПК-4 
инкремент, декремент Как называется операторы увеличения (++) и 
уменьшения (--) переменной на единицу? ОПК-2 
for, while, do while Перечислить три основных цикла в языке C++. ОПК-2 
базовый класс 
Назовите класс, находящийся на вершине иерархии 
наследования классов и в основании дерева 
подклассов, т. е. не являющийся подклассом и не 
имеющий наследований от других суперклассов или 
интерфейсов. 
ОПК-4 
абстрактный класс 
Как называется класс, содержащий хотя бы одну 
чисто виртуальную функцию и не предназначенный 
для создания экземпляров? 
ОПК-4 
 